"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TransactionWorker = void 0;
const axios_1 = __importDefault(require("axios"));
const constant_1 = require("../util/constant");
class TransactionWorker {
    constructor(configuration, accessToken) {
        this.accessToken = "";
        this.accessToken = accessToken;
        this.configuration = configuration;
    }
    requestTransactionGeneral(from, to) {
        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
            var _a;
            const url = yield ((_a = this.configuration) === null || _a === void 0 ? void 0 : _a.getAPIUrl());
            const headers = {
                "Content-Type": "application/json",
                "X-Channel-Id": "SDK NodeJS V 1.01",
                Authorization: `Bearer ${this.accessToken}`,
            };
            axios_1.default
                .get(`${url}/${constant_1.ENDPOINT.TRANSACTION_DATA_GENERAL}?from=${from}&to=${to}`, { headers: headers })
                .then((data) => {
                resolve(data.data);
            })
                .catch((err) => {
                reject(err);
            });
        }));
    }
    requestTransactionGeneralMFA(from, to) {
        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
            var _a;
            const url = yield ((_a = this.configuration) === null || _a === void 0 ? void 0 : _a.getAPIUrl());
            const headers = {
                "Content-Type": "application/json",
                "X-Channel-Id": "SDK NodeJS V 1.01",
                Authorization: `Bearer ${this.accessToken}`,
            };
            axios_1.default
                .post(`${url}/${constant_1.ENDPOINT.TRANSACTION_DATA_GENERAL_MFA}`, { headers: headers })
                .then((data) => {
                resolve(data.data);
            })
                .catch((err) => {
                reject(err);
            });
        }));
    }
}
exports.TransactionWorker = TransactionWorker;
//# sourceMappingURL=transactionWorker.js.map