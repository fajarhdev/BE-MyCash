"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EcommerceWorker = void 0;
const axios_1 = __importDefault(require("axios"));
const constant_1 = require("../util/constant");
class EcommerceWorker {
    constructor(configuration, institution) {
        this.configuration = configuration;
        this.institution = institution;
        this.configuration.setCurrentInstitution(this.institution);
    }
    requestReAuthentication(token) {
        var _a, _b, _c, _d, _e;
        let userAuthPayload = {
            institutionId: this.institution,
            requestId: this.configuration.requestId,
            username: (_a = this.configuration) === null || _a === void 0 ? void 0 : _a.username,
            token: token ? token : "",
            password: (_b = this.configuration) === null || _b === void 0 ? void 0 : _b.password,
            sessionId: (_c = this.configuration) === null || _c === void 0 ? void 0 : _c.sessionId,
        };
        console.log(userAuthPayload);
        let instName = "";
        let headers = {};
        if (this.institution == 20) {
            instName = "tokopedia";
            headers = {
                "Content-Type": "application/json",
                Cookie: this.configuration.cookies,
                Authorization: `Bearer ${(_d = this.configuration) === null || _d === void 0 ? void 0 : _d.publicAccessToken}`,
            };
        }
        else {
            instName = "shopee";
            headers = {
                "Content-Type": "application/json",
                Authorization: `Bearer ${(_e = this.configuration) === null || _e === void 0 ? void 0 : _e.publicAccessToken}`,
            };
        }
        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
            var _f, _g, _h, _j;
            const url = yield ((_f = this === null || this === void 0 ? void 0 : this.configuration) === null || _f === void 0 ? void 0 : _f.getAPIUrl());
            axios_1.default
                .post(`${url}/${constant_1.ENDPOINT.AUTH_USER}/${instName}/${(_h = (_g = this.configuration) === null || _g === void 0 ? void 0 : _g.authRequestData) === null || _h === void 0 ? void 0 : _h.data.clientId}?uuid=true&redirectRefId=${(_j = this.configuration.authRequestData) === null || _j === void 0 ? void 0 : _j.data.redirectRefId}`, JSON.stringify(userAuthPayload), {
                headers: headers,
            })
                .then((data) => {
                resolve(data.data);
            })
                .catch((err) => {
                reject(err);
            });
        }));
    }
    authenticateUser(username, password) {
        var _a;
        let userAuthPayload = {
            institutionId: this.institution,
            username: username,
            password: password,
            redirectRefId: (_a = this.configuration.authRequestData) === null || _a === void 0 ? void 0 : _a.data.redirectRefId,
        };
        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {
            var _b, _c, _d;
            const url = yield ((_b = this === null || this === void 0 ? void 0 : this.configuration) === null || _b === void 0 ? void 0 : _b.getAPIUrl());
            axios_1.default
                .post(`${url}/${constant_1.ENDPOINT.AUTH_USER}/${(_c = this.configuration.authRequestData) === null || _c === void 0 ? void 0 : _c.data.clientId}`, JSON.stringify(userAuthPayload), {
                headers: {
                    "Content-Type": "application/json",
                    Authorization: `Bearer ${(_d = this.configuration) === null || _d === void 0 ? void 0 : _d.publicAccessToken}`,
                },
            })
                .then((data) => {
                var _a, _b, _c, _d, _e;
                this.configuration.cookies = data.headers['set-cookie'];
                //this.configuration.cookies = data.
                (_a = this.configuration) === null || _a === void 0 ? void 0 : _a.sertRequestId((_b = this.configuration.authRequestData) === null || _b === void 0 ? void 0 : _b.data.clientId);
                (_c = this.configuration) === null || _c === void 0 ? void 0 : _c.setpassword(password);
                (_d = this.configuration) === null || _d === void 0 ? void 0 : _d.setSessionId(data.data.data.sessionId);
                (_e = this.configuration) === null || _e === void 0 ? void 0 : _e.setCurrentUserName(username);
                resolve(data.data);
            })
                .catch((err) => {
                reject(err);
            });
        }));
    }
}
exports.EcommerceWorker = EcommerceWorker;
//# sourceMappingURL=ecommerceWorker.js.map