import { AuthenticationRequestResponse } from "core/models/authentication";
import { ENVIRONMENT } from "../../index";
import { CONFIGURATION } from "./constant";

interface IConfiguration {
  getAPIUrl(): string;
  setUserAuthenticationRequestData(
    authData: AuthenticationRequestResponse
  ): void;
  getAmplitudeKey(): string;
  setPublicAccessToken(accessToken: string): void;
}
export class Configuration implements IConfiguration {
  clientKey?: string = "";
  authRequestData?: AuthenticationRequestResponse;
  clientSecret?: string = "";
  name?: string = "";
  cookies?:any[] = [];
  uniqueId?: string = "";
  deviceId?: string = "";
  sessionId?: string = "";
  redirectRefId?: string = "";
  refId?: string = "";
  password?: string = "";
  requestId?: string = "";
  username?: string = "";
  otpToken?: string = "";
  currentInstitution?: number;
  redirectURL: string = "";
  environment: ENVIRONMENT = ENVIRONMENT.SANBOX;
  public publicAccessToken: String = "";

  constructor(
    clientKey?: string,
    clientSecret?: string,
    environment?: number,
    name?: string,
    redirectURL?: string
  ) {
    this.clientKey = clientKey;
    this.clientSecret = clientSecret;
    this.redirectURL = redirectURL ? redirectURL : "";
    this.name = name;
    this.environment = environment ? environment : ENVIRONMENT.SANBOX;
    this.publicAccessToken = "";
  }
  setUserAuthenticationRequestData(
    authData: AuthenticationRequestResponse
  ): void {
    this.authRequestData = authData;
  }
  sertRequestId(requestId: string): void {
    this.requestId = requestId;
  }
  setUniqueId(uniqueId: string): void {
    this.uniqueId = uniqueId;
  }
  setSessionId(sessionId: string): void {
    this.sessionId = sessionId;
  }
  setOTPToken(otpToken: string): void {
    this.otpToken = otpToken;
  }
  setRefId(refId: string): void {
    this.refId = refId;
  }
  setDeviceId(deviceId: string): void {
    this.deviceId = deviceId;
  }
  setpassword(password: any) {
    this.password = password;
  }
  setCurrentUserName(username: string): void {
    this.username = username;
  }
  setCurrentInstitution(insitution: number): void {
    this.currentInstitution = insitution;
  }
  setPublicAccessToken(accessToken: string): void {
    this.publicAccessToken = accessToken;
  }
  setRedirectRefId(refId: string): void {
    this.redirectRefId = refId;
  }
  getAmplitudeKey(): string {
    return this.environment == ENVIRONMENT.PRODUCTION
      ? CONFIGURATION.AMP_PROD
      : CONFIGURATION.AMP_SANDBOX;
  }
  getAPIUrl(): string {
    return this.environment == ENVIRONMENT.PRODUCTION
      ? CONFIGURATION.CORE_PRODUCTION_API_URL_V1
      : CONFIGURATION.CORE_SANDBOX_API_URL_V1;
  }
}
