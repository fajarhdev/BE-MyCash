import axios from "axios";
import { InstitutionList } from "../../core/models/institution";
import { Configuration } from "../../core/util/configuration";
import { ENDPOINT } from "../../core/util/constant";
export interface IInstitutionPayload {
  configuration?: Configuration;
  bearerToken?: String;
  userId?: String;
}

interface IInstitutionWorker {
  listInstitution(): Promise<InstitutionList>;
  submitInstitution(): Promise<any>;
}
export class InstitutionWorker implements IInstitutionWorker {
  institutionPayload?: IInstitutionPayload;
  constructor(institutionPayload: IInstitutionPayload) {
    this.institutionPayload = institutionPayload;
  }

  submitInstitution(): Promise<any> {
    throw new Error("Method not implemented.");
  }

  listInstitution(): Promise<InstitutionList> {
    return new Promise<any>(async (resolve, reject) => {
      const url = await this.institutionPayload?.configuration?.getAPIUrl();
      axios
        .get(
          `${url}/${ENDPOINT.INSTITUTION_LIST}/${this.institutionPayload?.userId}`,
          {
            headers: {
              Authorization: `Bearer ${this.institutionPayload?.bearerToken}`,
            },
          }
        )
        .then((data: any) => {
          let institutionList = data.data as InstitutionList;
          resolve(institutionList);
        })
        .catch((err: Error) => {
          reject(err);
        });
    });
  }
}
