import axios from "axios";
import { ENDPOINT } from "../util/constant";
import { Configuration } from "../util/configuration";
export class AccountDataWorker {
  accessToken: String = "";
  configuration: Configuration;
  constructor(configuration:Configuration,accessToken: string) {
    this.accessToken = accessToken;
    this.configuration = configuration;
  }

  requestAccountGeneral(): Promise<any> {
    return new Promise<any>(async (resolve, reject) => {
      const url = await this.configuration?.getAPIUrl();
      const headers = {
        "Content-Type": "application/json",
        "X-Channel-Id": "SDK NodeJS V 1.01",
        Authorization: `Bearer ${this.accessToken}`,
      };
      axios
        .get(`${url}/${ENDPOINT.ACCOUNT_DATA_GENERAL}`, { headers: headers })
        .then((data: any) => {
          resolve(data.data);
        })
        .catch((err: Error) => {
          reject(err);
        });
    });
  }

  requestAccountGeneralMFA(): Promise<any> {
    return new Promise<any>(async (resolve, reject) => {
      const url = await this.configuration?.getAPIUrl();
      const headers = {
        "Content-Type": "application/json",
        "X-Channel-Id": "SDK NodeJS V 1.01",
        Authorization: `Bearer ${this.accessToken}`,
      };
      axios
        .post(`${url}/${ENDPOINT.ACCOUNT_DATA_GENERAL_MFA}`, { headers: headers })
        .then((data: any) => {
          resolve(data.data);
        })
        .catch((err: Error) => {
          reject(err);
        });
    });
  }
  
  requestAccountDetailGeneral(accountId:string): Promise<any> {
    return new Promise<any>(async (resolve, reject) => {
      const url = await this.configuration?.getAPIUrl();
      const headers = {
        "Content-Type": "application/json",
        "X-Channel-Id": "SDK NodeJS V 1.01",
        Authorization: `Bearer ${this.accessToken}`,
      };
      console.log(`${ENDPOINT.ACCOUNT}/detail?accountId=${accountId}`)
      axios
        .get(`${url}/${ENDPOINT.ACCOUNT}/detail?accountId=${accountId}`, { headers: headers })
        .then((data: any) => {
          resolve(data.data);
        })
        .catch((err: Error) => {
          reject(err);
        });
    });
  }
  requestAccountDetailGeneralMFA(): Promise<any> {
    return new Promise<any>(async (resolve, reject) => {
      const url = await this.configuration?.getAPIUrl();
      const headers = {
        "Content-Type": "application/json",
        "X-Channel-Id": "SDK NodeJS V 1.01",
        Authorization: `Bearer ${this.accessToken}`,
      };
      axios
        .post(`${url}/${ENDPOINT.ACCOUNT}-mfa/detail`, { headers: headers })
        .then((data: any) => {
          resolve(data.data);
        })
        .catch((err: Error) => {
          reject(err);
        });
    });
  }
}
