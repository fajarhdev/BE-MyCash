import { ILooseObject } from './../util/looseObject';
import axios from "axios";
import { ENDPOINT } from "../util/constant";
import { Configuration } from "../util/configuration";
export class InsightWorker {
  accessToken: String = "";
  configuration: Configuration;
  constructor(configuration: Configuration, accessToken: string) {
    this.accessToken = accessToken;
    this.configuration = configuration;
  }

  requestCategorization(transactionDescription: ILooseObject): Promise<any> {
    return new Promise<any>(async (resolve, reject) => {
      const url = await this.configuration?.getAPIUrl();
      const headers = {
        "Content-Type": "application/json",
        "X-Channel-Id": "SDK NodeJS V 1.01",
        Authorization: `Bearer ${this.accessToken.replace(/(\r\n|\n|\r)/gm, "")}`,
      };
      axios
        .post(
          `${url}/${ENDPOINT.INSIGHT_CATEGORIZATION}`,
          transactionDescription,
          { headers: headers }
        )
        .then((data: any) => {
          resolve(data.data);
        })
        .catch((err: Error) => {
          reject(err);
        });
    });
  }
  requestTransactionBalanceSummary(from: string, to: string): Promise<any> {
    return new Promise<any>(async (resolve, reject) => {
      const url = await this.configuration?.getAPIUrl();
      const headers = {
        "Content-Type": "application/json",
        "X-Channel-Id": "SDK NodeJS V 1.01",
        Authorization: `Bearer ${this.accessToken.replace(/(\r\n|\n|\r)/gm, "")}`,
      };
      axios
        .get(
          `${url}/${ENDPOINT.INSIGHT_BALANCE_SUMMARY}?from=${from}&to=${to}`,
          { headers: headers }
        )
        .then((data: any) => {
          resolve(data.data);
        })
        .catch((err: Error) => {
          reject(err);
        });
    });
  }
  requestAvarageBalance(from: string, to: string): Promise<any> {
    return new Promise<any>(async (resolve, reject) => {
      const url = await this.configuration?.getAPIUrl();
      const headers = {
        "X-Channel-Id": "SDK NodeJS V 1.01",
        Authorization: `Bearer ${this.accessToken.replace(/(\r\n|\n|\r)/gm, "")}`,
      };
      axios
        .get(`${url}/${ENDPOINT.INSIGHT_AVG_BALANCE}?from=${from}&to=${to}`, {
          headers: headers,
        })
        .then((data: any) => {
          resolve(data.data);
        })
        .catch((err: Error) => {
          reject(err);
        });
    });
  }
}
